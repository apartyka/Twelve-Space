/* ==========================================================================
   Grids / Twelve-Space Structure System [v0.1.0]
   ========================================================================== */
/*!
 * Twelve-Space Structure System v0.1.0
 * Created by Kevin Mack
 *
 * Date: 2013-10-29
 */

.grid--12 {
	> [class*="grid__cell"] {
		float: left;
	}
}
@mixin generate-grid-expand( $grid__cell-amount: 1, $grid-offset-value: 1, $element-name: "expand", $property: "width", $block-name: "grid__cell", $grid-column-quanity: 12 ) {
	$class-name: $block-name + "--" + $grid__cell-amount + "__" + $element-name + "--" + $grid-offset-value;
	.#{$class-name} {
		#{$property}: percentage( 1 + ($grid-offset-value / $grid__cell-amount) );
	}
}

@mixin generate-grid__cell-offset( $grid__cell-amount: 1, $grid-offset-value: 1, $element-name: "expand", $property: "width", $positiveOrNegative: 1, $block-name: "grid__cell", $grid-column-quanity: 12 ) {
	$class-name: $block-name + "__" + $element-name + "--" + $grid-offset-value;
	.#{$class-name} {
		#{$property}:  percentage(($grid-offset-value / $grid-column-quanity)) * $positiveOrNegative;
	}
}

@mixin generate-grid__cell__offset( $grid__cell-amount: 1, $grid-offset-value: 1, $element-name: "expand", $property: "width", $positiveOrNegative: 1, $block-name: "grid__cell", $grid-column-quanity: 12 ) {
	$class-name: $block-name + "--" + $grid__cell-amount +  "__" + $element-name + "--" + $grid-offset-value;
	.#{$class-name} {
		#{$property}: percentage(  ($grid-offset-value / $grid__cell-amount) ) * -1;
	}
}


@for $i from 1 through 12 {
	@for $x from 1 through 12 {
		@include generate-grid__cell__offset($i, $x, "offset", "margin-right", -1, "grid__cell", 12 );
	}
}
@for $i from 1 through 12 {
	@for $x from 1 through 12 {
		@include generate-grid__cell__offset($i, $x, "offset--negative", "margin-left", -1, "grid__cell", 12 );
	}
}

@for $i from 1 through 12 {
	@for $x from 1 through 12 {
		@include generate-grid-expand($i, $x);
	}
}

@for $i from 1 through 12 {
	@include generate-grid__cell-offset(1, $i, "cell--offset", "margin-left", 1, "grid", 12 );
}

@for $i from 1 through 12 {
	@include generate-grid__cell-offset(1, $i, "cell--offset--negative", "margin-left", -1, "grid", 12 );
}

@for $i from 1 through 12 {
	.grid__cell--#{$i} {
		width: percentage( $i / 12);
	}
}
@for $i from 1 through 12 {
	.grid__space--left--#{$i} {
		margin-left: percentage( $i / 12);
	}
}
@for $i from 1 through 12 {
	.grid__space--right--#{$i} {
		margin-right: percentage( $i / 12);
	}
}



%grid {
	> .grid__cell, > .grid__cell--asset, > .grid__cell--content {
		&:nth-child(odd) {
			float: left;
		}
		&:nth-child(even) {
			float: right;
		}
	}
}

/**
 * ## Grid
 * Inherits `%grid` properties
 * **nth-child(1n)** is `float: left` and **nth-child(2n)** is `float: right`
 */
.grid {
	@extend %grid;
}

/**
 * ### Basic Two Column Grid
 */

.grid--two, .grid--two--layed {
	@extend %grid;
}

.grid--two {
	> .grid__cell, > .grid__cell--content {
		width: percentage( 4 / 12);
	}
	> .grid__cell--larger, > .grid__cell--asset {
		width: percentage( 8 / 12);
	}
}

%expand-out {
	position: relative;
	display: block;
}

.expand-out--1, .expand-out--2 {
	@extend %expand-out;
	z-index: 2;
}

.position--absolute {
	position: absolute;
}


/**
 * ## Image Widths
 * `.grid__cell--asset` and `.asset-container` make children `<img />` width equal to "100%"
 */
.grid__cell--asset, .asset-container {
	img {
		display: block;
		width: 100%;
	}
}


/*
 * ## Two Column Grid
 * Equal column widths (50%), applied to absolute path of child (`.grid__cell`)
 */
.grid--equal--two {
	> [class*="grid__cell"] {
		width: 50%;
	}
}

.grid--two, .grid--equal--two {
	> [class*="grid__cell"] {
		// Clear for equal grid/column heights:
		&:nth-child(2n+1) {
			clear: both;
		}
	}
}
/*
 * ## Three Column Grid
 * Equal column widths (33.333%), applied to absolute path of child (`.grid__cell`)
 */
.grid--equal--three {
	> [class*="grid__cell"] {
		width: percentage( 1 / 3 );
		// Clear for equal grid/column heights:
		&:nth-child(3n+1) {
			clear: both;
		}
	}
}


/**
 * ### Equal heights for any parent class that has `grid` in it
 */
.grid, [class*="grid__equal"], .float-container {
	> .grid__cell--left {
		float: left;
	}
	> .grid__cell--right {
		float: right;
	}
}

[class*="grid--equal"], .float-container {
	> .grid__cell {
		float: left;
	}
}

.grid, .grid--two, [class*="grid__equal"], .grid--12 {
	&:after {
		display: table;
		clear: both;
		content: "";
	}
}


